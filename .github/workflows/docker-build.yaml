name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      APPOINTMENT_SERVICE_NAME: ${{ secrets.APPOINTMENT_SERVICE_NAME }}
      PATIENT_SERVICE_NAME: ${{ secrets.PATIENT_SERVICE_NAME }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build and Push Appointment Service
      - name: Build and Push Appointment Service
        run: |
          cd ${{ env.APPOINTMENT_SERVICE_NAME }}
          IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.APPOINTMENT_SERVICE_NAME }}
          docker build -t ${{ env.APPOINTMENT_SERVICE_NAME }} .
          docker tag ${{ env.APPOINTMENT_SERVICE_NAME }}:latest $IMAGE_URI
          docker push $IMAGE_URI

      # Step 5: Build and Push Patient Service
      - name: Build and Push Patient Service
        run: |
          cd ../${{ env.PATIENT_SERVICE_NAME }}
          IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.PATIENT_SERVICE_NAME }}
          docker build -t ${{ env.PATIENT_SERVICE_NAME }} .
          docker tag ${{ env.PATIENT_SERVICE_NAME }}:latest $IMAGE_URI
          docker push $IMAGE_URI
